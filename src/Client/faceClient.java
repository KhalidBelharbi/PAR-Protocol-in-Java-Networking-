/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Client;

import Commun.Paquet;
import Commun.TimerDescrement;
import Commun.Trame;
import java.awt.event.KeyEvent;
import java.net.*;
import java.io.*;
import java.nio.charset.StandardCharsets;
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JViewport;
import java.util.zip.CRC32;
import javax.swing.ImageIcon;
/**
* Copyright - This code contains a watermark for the author
* @author Khalid Belharbi
*/
public class faceClient extends javax.swing.JFrame {
	   static final int port=49499;
        /**
         * numéro de séquence de<b>la prochaine trame envoyée </b>
         */
        int Num_Seq=0;      // le prochaine trame à envoyer
        int ACK=0; //    le numero de séquence du trame attendu ( bidirectionnelle)
        int delaiDesGardValue=5000;
        CRC32 crc;
       // Datagramme
        ObjectOutputStream out=null;
     	ObjectInputStream in=null;
        InetAddress adrServer;   /// adresse de Serveur
        DatagramSocket socketUDP;
        DatagramPacket PDU,PacketRecu;
        ByteArrayInputStream ArrayIN;
        ByteArrayOutputStream ArrayOUT;
        byte[] dataRecu;
      
        
        
        public void lancer(){
             try {   
                 
                 crc=new CRC32();
                 
                 dataRecu=new byte[512];
                 PacketRecu=new DatagramPacket(dataRecu,dataRecu.length);
                 this.FieldEtatTimer.setText(this.delaiDesGardValue+"");
                 this.DelaiGarde.setText(this.delaiDesGardValue+"");
                 this.NUM_SEQ_PT.setText(this.Num_Seq+"");
                 this.adrServer=InetAddress.getLocalHost();
                 this.socketUDP=new DatagramSocket();
           
           
                
                
                
                while(true){
            socketUDP.receive(PacketRecu);
            this.ArrayIN=new ByteArrayInputStream(PacketRecu.getData());
            this.in=new ObjectInputStream(ArrayIN);
            Object obj=in.readObject();
          if(obj instanceof Integer){
             Integer intRecu=(Integer) obj;
                 if(intRecu.intValue()==this.Num_Seq){
                                this.Num_Seq=1-this.Num_Seq;
                                this.NUM_SEQ_PT.setText(this.Num_Seq+"");
                                this.jTextArea1.setText(this.jTextArea1.getText()+"    Message aquitté correctement \n");
                                this.Stop_Timer();
                            }
                
                
            }
            
                }
   } catch (IOException ex) {} catch (ClassNotFoundException ex) {}
        
        
        }
        
        
        
        
        
        
        
    public faceClient() {
           
                initComponents();
                this.setBounds(100,50,632,538);
                this.setResizable(false);
                this.setIconImage(new ImageIcon(this.getClass().getResource("/srcc/n.png")).getImage());
                this.setTitle(" Belharbi Khaled G02 - Protocole PAR ");
        
    }

    
    
    public void increment(int x){
        x=1-x;
   }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        SendButton = new javax.swing.JButton();
        FieldEtatTimer = new javax.swing.JTextField();
        DelaiGarde = new javax.swing.JTextField();
        NUM_SEQ_PT = new javax.swing.JTextField();
        CheckSumField = new javax.swing.JTextField();
        back = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jTextArea1.setBackground(new java.awt.Color(0, 0, 0));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea1.setRows(3);
        jTextArea1.setBorder(null);
        jTextArea1.setOpaque(false);
        jTextArea1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextArea1KeyPressed(evt);
            }
        });
        jScrollPane1.setOpaque(false);
        jScrollPane1.setViewport(new MyViewport());
        jScrollPane1.setViewportView(jTextArea1);
        //

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(70, 160, 500, 150);

        SendButton.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        SendButton.setForeground(new java.awt.Color(255, 255, 255));
        SendButton.setBorder(null);
        SendButton.setBorderPainted(false);
        SendButton.setContentAreaFilled(false);
        SendButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SendButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SendButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SendButtonMouseExited(evt);
            }
        });
        SendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendButtonActionPerformed(evt);
            }
        });
        getContentPane().add(SendButton);
        SendButton.setBounds(290, 320, 80, 70);

        FieldEtatTimer.setEditable(false);
        FieldEtatTimer.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        FieldEtatTimer.setForeground(new java.awt.Color(204, 204, 204));
        FieldEtatTimer.setBorder(null);
        FieldEtatTimer.setEnabled(false);
        FieldEtatTimer.setOpaque(false);
        getContentPane().add(FieldEtatTimer);
        FieldEtatTimer.setBounds(280, 400, 180, 40);

        DelaiGarde.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        DelaiGarde.setForeground(new java.awt.Color(204, 204, 204));
        DelaiGarde.setBorder(null);
        DelaiGarde.setOpaque(false);
        DelaiGarde.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DelaiGardeKeyPressed(evt);
            }
        });
        getContentPane().add(DelaiGarde);
        DelaiGarde.setBounds(450, 470, 170, 30);

        NUM_SEQ_PT.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        NUM_SEQ_PT.setForeground(new java.awt.Color(204, 204, 204));
        NUM_SEQ_PT.setBorder(null);
        NUM_SEQ_PT.setEnabled(false);
        NUM_SEQ_PT.setOpaque(false);
        getContentPane().add(NUM_SEQ_PT);
        NUM_SEQ_PT.setBounds(50, 470, 180, 30);

        CheckSumField.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        CheckSumField.setForeground(new java.awt.Color(204, 204, 204));
        CheckSumField.setBorder(null);
        CheckSumField.setEnabled(false);
        CheckSumField.setOpaque(false);
        getContentPane().add(CheckSumField);
        CheckSumField.setBounds(260, 470, 180, 30);

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/srcc/Client.png"))); // NOI18N
        getContentPane().add(back);
        back.setBounds(0, 0, 640, 510);

        pack();
    }// </editor-fold>                        

    
    int saveDG=this.delaiDesGardValue;
    private void SendButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
      
        
        
        delaiDesGardValue=Integer.valueOf(this.DelaiGarde.getText().trim());
        this.FieldEtatTimer.setText(delaiDesGardValue+"");
                 Start_Timer(delaiDesGardValue);

        //   comme un message provenant de la couche réseau
        Paquet p=new Paquet(this.jTextArea1.getText());
        Trame tt=getTrameWithCheckSum(new Trame(this.ACK,this.Num_Seq,p));
        
//        System.out.println("les données  "+tt.getTrameString());
//        System.out.println("les données with crc   "+tt.getTrameStringWithCRC32());
        
        this.Vers_Couche_Physique(tt.getTrameStringWithCRC32());
       // this.CheckSumField.setText(tt.getCRC32()+"");
        
      //  System.out.println(tt.getTrameStringWithCRC32());
        
        // numero de seq : le prochaine trame à envoyer
        
        
    }                                          

    private void jTextArea1KeyPressed(java.awt.event.KeyEvent evt) {                                      
       
        
        if(evt.getKeyChar()==KeyEvent.VK_ENTER){
            
            this.SendButton.doClick();
            
            
        }
         if(evt.getKeyChar()==KeyEvent.VK_DELETE){
            
           this.jTextArea1.setText("");
            
            
        }
        
        
        
        
        
        
    }                                     

    private void DelaiGardeKeyPressed(java.awt.event.KeyEvent evt) {                                      
        
        
        if(evt.getKeyChar()==KeyEvent.VK_ENTER){
            
            this.delaiDesGardValue=Integer.valueOf(this.DelaiGarde.getText().trim());
            
                    this.FieldEtatTimer.setText(this.delaiDesGardValue+"");

        
        }
        
        
    }                                     

    private void SendButtonMouseExited(java.awt.event.MouseEvent evt) {                                       
        this.back.setIcon(new ImageIcon(this.getClass().getResource("/srcc/Client.png")));
    }                                      

    private void SendButtonMouseEntered(java.awt.event.MouseEvent evt) {                                        
      
        
        this.back.setIcon(new ImageIcon(this.getClass().getResource("/srcc/ClientEffect.png")));
        
    }                                       

    
    public Trame getTrameWithCheckSum(Trame trame){
        
        String trm=trame.getTrameString();
        
        byte[] vect=trm.getBytes();
        
        crc.update(vect,0,vect.length);
        long code=crc.getValue();
                this.CheckSumField.setText(code+"");
                trame.setCRC32(code);
                
                
                System.out.println(code+"     crc");
                crc.reset();
        return trame;
        
    }
    
    
    
    
    
    
    
    public void Vers_Couche_Physique (String trm){
        
            try {
                
                this.ArrayOUT=new ByteArrayOutputStream();
                this.out=new ObjectOutputStream(ArrayOUT);
                out.writeObject(trm);
                
                byte[] data=ArrayOUT.toByteArray();
                
                
                
             
                this.socketUDP.send(new DatagramPacket(data,data.length,this.adrServer,port));
                
                
                
              //  this.out.reset();
            } catch (IOException ex) {
            }
        
        
        
        
    }
    
    
    
    
    
    
    
    Timer timer=null;
    
    public void Start_Timer(int delai){
        
        timer = new Timer();
        TimerDescrement x=new TimerDescrement(delai,FieldEtatTimer,this);
        
        
              
    //    timer.schedule (x, 0, 1);
        timer.schedule (x, 1, 1);
        
        
    }
    
    public void Stop_Timer(){
        
        // interruption de temps
        timer.cancel();
    }
    
    
    public void timeOut(){
        
        timer.cancel();
        this.SendButton.doClick();
        
    }
   
    // Variables declaration - do not modify                     
    private javax.swing.JTextField CheckSumField;
    private javax.swing.JTextField DelaiGarde;
    private javax.swing.JTextField FieldEtatTimer;
    private javax.swing.JTextField NUM_SEQ_PT;
    private javax.swing.JButton SendButton;
    private javax.swing.JLabel back;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextArea jTextArea1;
    // End of variables declaration                   
}






















class MyViewport extends JViewport {

    public MyViewport() {
        this.setOpaque(false);
       
    }
}